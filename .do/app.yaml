name: mux-mastra-agent
region: nyc

# Services
services:
  - name: backend
    # Build configuration
    dockerfile_path: Dockerfile
    source_dir: /
    github:
      repo: YOUR_GITHUB_USERNAME/mux-mastra-agent
      branch: main
      deploy_on_push: true
    
    # Environment variables
    envs:
      # Application Configuration
      - key: NODE_ENV
        value: production
      - key: BACKEND_PORT
        value: "3001"
      - key: HOST
        value: "0.0.0.0"
      
      # CORS Configuration (will be updated with your App Platform URL)
      - key: CORS_ORIGINS
        value: "${APP_URL}"
      
      # Anthropic API Configuration
      - key: ANTHROPIC_API_KEY
        scope: RUN_AND_BUILD_TIME
        type: SECRET
      - key: ANTHROPIC_MODEL
        value: claude-3-5-haiku-latest
      
      # Mux Video API Configuration
      - key: MUX_TOKEN_ID
        scope: RUN_AND_BUILD_TIME
        type: SECRET
      - key: MUX_TOKEN_SECRET
        scope: RUN_AND_BUILD_TIME
        type: SECRET
      - key: MUX_SIGNING_KEY_ID
        scope: RUN_AND_BUILD_TIME
        type: SECRET
      - key: MUX_SIGNING_KEY_SECRET
        scope: RUN_AND_BUILD_TIME
        type: SECRET
      - key: MUX_PLAYBACK_POLICY
        value: signed
      - key: USE_MUX_MCP
        value: "true"
      
      # MCP Configuration
      - key: MUX_MCP_UPLOAD_ARGS
        value: "@mux/mcp,client=cursor,--tools=dynamic,--resource=video.uploads"
      - key: MUX_MCP_ASSETS_ARGS
        value: "@mux/mcp,client=cursor,--tools=dynamic,--resource=video.assets"
      - key: MUX_MCP_DATA_ARGS
        value: "@mux/mcp,client=cursor,--tools=dynamic,--resource=data.errors,--resource=data.metrics,--resource=data.video_views"
      
      # Database Configuration (SQLite in persistent storage)
      - key: MASTRA_MEMORY_DB_URL
        value: "file:/app/data/mux-analytics-memory.db"
      - key: MASTRA_VECTOR_DB_URL
        value: "file:/app/data/mux-analytics-vector.db"
      
      # TTS Configuration (Cartesia)
      - key: CARTESIA_API_KEY
        scope: RUN_AND_BUILD_TIME
        type: SECRET
      - key: CARTESIA_VOICE_ID
        value: "a0e99841-438c-4a64-b679-ae501e7d6091"
      - key: CARTESIA_SPEED
        value: "0.0"
      - key: CARTESIA_EMOTIONS
        value: "positivity:high"
      
      # STT Configuration (Deepgram)
      - key: DEEPGRAM_API_KEY
        scope: RUN_AND_BUILD_TIME
        type: SECRET
      - key: DEEPGRAM_TTS_MODEL
        value: aura-asteria-en
      
      # TTS Configuration
      - key: TTS_TMP_DIR
        value: "/tmp/tts"
      - key: TTS_CLEANUP
        value: "true"
      
      # Timeout Configuration
      - key: MUX_CONNECTION_TIMEOUT
        value: "45000"
      - key: MUX_VERIFY_TIMEOUT_MS
        value: "300000"
      - key: MUX_VERIFY_POLL_MS
        value: "5000"
      
      # Weather API Configuration
      - key: WEATHER_MCP_USER_AGENT
        value: "WeatherAgent/1.0 (media-vault-agent@streamingportfolio.com)"
      
      # Frontend Configuration (will be updated with App Platform URL)
      - key: VITE_MASTRA_API_HOST
        value: "${APP_URL}"
      - key: VITE_MUX_ANALYTICS_AGENT_ID
        value: "mux-analytics"
      - key: VITE_WEATHER_AGENT_ID
        value: "video professional streaming media at paramount plus"
    
    # Health check
    health_check:
      http_path: /api/health
      initial_delay_seconds: 60
      period_seconds: 10
      timeout_seconds: 10
      success_threshold: 1
      failure_threshold: 3
    
    # HTTP configuration
    http_port: 3001
    
    # Instance configuration
    instance_count: 1
    instance_size_slug: professional-xs  # 1 vCPU, 2GB RAM - Minimum recommended
    
    # Routes - serve everything from this service
    routes:
      - path: /
    
    # Auto-deploy
    autoscaling:
      min_instance_count: 1
      max_instance_count: 3
      metrics:
        cpu:
          percent: 80

# Optional: Add managed database (uncomment if needed)
# databases:
#   - name: mux-mastra-db
#     engine: PG
#     version: "15"
#     size: db-s-1vcpu-1gb
#     num_nodes: 1
#     production: true

# Alerts
alerts:
  - rule: DEPLOYMENT_FAILED
  - rule: DOMAIN_FAILED

