# Simple production Dockerfile for Digital Ocean
FROM node:24-slim

WORKDIR /app

# Install system dependencies needed for native modules (canvas, etc.)
RUN apt-get update && apt-get install -y \
    python3 \
    make \
    g++ \
    libcairo2-dev \
    libjpeg-dev \
    libpango1.0-dev \
    libgif-dev \
    build-essential \
    libfreetype6-dev \
    libcairo2 \
    libjpeg62-turbo \
    libpango-1.0-0 \
    libgif7 \
    libpixman-1-0 \
    libpangocairo-1.0-0 \
    libfreetype6 \
    ffmpeg \
    && rm -rf /var/lib/apt/lists/*

# Ensure Python is available for node-gyp
RUN ln -sf /usr/bin/python3 /usr/bin/python

# Copy package files
COPY package*.json ./
COPY backend/package*.json ./backend/
COPY frontend/package*.json ./frontend/
COPY shared/package*.json ./shared/
COPY scripts/ ./scripts/
COPY .npmrc ./

# Install dependencies
RUN npm ci --no-optional --ignore-scripts && ./scripts/cleanup-native-modules.sh

# Copy source code
COPY . .

# Build shared package first
RUN cd shared && npm run build

# Build the application
RUN npm run build

# Fix the dist structure - move the nested files to the correct location
RUN mkdir -p /app/backend/dist && \
    if [ -d /app/backend/dist/backend/src ]; then \
        cp -r /app/backend/dist/backend/src/* /app/backend/dist/ && \
        rm -rf /app/backend/dist/backend; \
    fi

# Create non-root user with proper home directory
RUN addgroup --system --gid 1001 nodejs
RUN adduser --system --uid 1001 --home /app --shell /bin/sh weatheruser

# Create charts directory and set permissions
RUN mkdir -p /app/backend/files/charts

# Configure npm to use proper directories
RUN mkdir -p /app/.npm
RUN mkdir -p /app/.npm-global

# Copy and setup startup script
COPY backend/start.sh ./backend/start.sh
RUN chmod +x /app/backend/start.sh

# Set ownership of the entire app directory
RUN chown -R weatheruser:nodejs /app

# Switch to non-root user
USER weatheruser

# Ensure the working directory has proper permissions
RUN chown -R weatheruser:nodejs /app/backend

# Set working directory to backend
WORKDIR /app/backend

# Expose port
EXPOSE 3001

# Set environment
ENV NODE_ENV=production
ENV PORT=3001

# Configure npm to use proper directories
ENV NPM_CONFIG_CACHE=/app/.npm
ENV NPM_CONFIG_PREFIX=/app/.npm-global
ENV HOME=/app

# Skip problematic native modules
ENV SKIP_SASS_BINARY_DOWNLOAD_FOR_CI=true
ENV SKIP_NODE_SASS_TESTS=true
ENV PUPPETEER_SKIP_CHROMIUM_DOWNLOAD=true
ENV npm_config_build_from_source=false
ENV npm_config_cache_min=86400
ENV npm_config_prefer_offline=true

# Start the application using the startup script
CMD ["./start.sh"]
